{"version":3,"sources":["components/card/Card.js","components/card-list/cardList.js","components/search-box/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","Search","type","placeholder","onChange","onChangeHandler","App","state","search","fetch","then","response","json","setState","this","filteredMonster","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,G,kBAAQ,SAACC,GAClB,OACI,sBAAKC,UAAY,iBAAjB,UACG,qBAAKC,IAAM,UAAUC,IAAG,+BAA4BH,EAAMI,QAAQC,GAA1C,eACxB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCJhBC,EAAW,SAACR,GAErB,OACI,qBAAKC,UAAY,WAAjB,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,UCLnDM,G,MAAS,SAACX,GAAD,OAClB,uBAAOC,UAAY,SACnBW,KAAQ,OACRC,YAAeb,EAAMa,YACrBC,SAAYd,EAAMe,oBC2BPC,E,kDA5Bb,WAAYhB,GAAO,IAAD,8BAChB,cAAMA,IACDiB,MAAQ,CACXR,SAAW,GAGXS,OAAS,IANK,E,gEAUE,IAAD,OACjBC,MAAM,8CAA8CC,MAAK,SAAAC,GACvDA,EAASC,OAAOF,MAAK,SAAAC,GAAQ,OAAI,EAAKE,SAAS,CAACd,SAAWY,Y,+BAGtD,IAAD,SACqBG,KAAKP,MAAzBR,EADD,EACCA,SAAUS,EADX,EACWA,OACXO,EAAkBhB,EAASiB,QAAO,SAAAtB,GAAO,OAAIA,EAAQE,KAAKqB,cAAcC,SAASV,EAAOS,kBAC9F,OACA,sBAAK1B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAQY,YAAc,iBAAiBE,gBAAmB,SAACc,GAAD,OAAO,EAAKN,SAAS,CAACL,OAASW,EAAEC,OAAOC,WAClG,cAAC,EAAD,CAAUtB,SAAYgB,W,GAvBVO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.012d5902.chunk.js","sourcesContent":["import React from 'react';\nimport '../card/Card.styles.css';\n\nexport const Card  = (props) => {\n    return(\n        <div className = 'card-container'>\n           <img alt = 'monster' src = {`https://robohash.org/${props.monster.id}?set=set2`}></img>\n           <h1>{props.monster.name}</h1>\n           <p>{props.monster.email}</p>\n        </div>\n    );\n}","import React from 'react';\nimport './cardList.styles.css'\nimport {Card} from '../card/Card';\n\nexport const CardList = (props) => {\n\n    return(\n        <div className = 'cardlist'>\n            {props.monsters.map(monster => <Card key = {monster.id} monster = {monster}></Card>)}  \n        </div>\n    );\n\n}","import React from 'react';\nimport './search.styles.css';\n\nexport const Search = (props) => (\n    <input className = 'search'\n    type  = 'text'\n    placeholder = {props.placeholder}\n    onChange = {props.onChangeHandler}/>\n);","import './App.css';\nimport React,{Component} from 'react';\nimport {CardList} from './components/card-list/cardList';\nimport {Search} from './components/search-box/search.component';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      monsters : [\n       \n      ],\n      search : ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => {\n      response.json().then(response => this.setState({monsters : response}))\n    })\n  }\n  render(){\n    const {monsters, search} = this.state;\n    const filteredMonster = monsters.filter(monster => monster.name.toLowerCase().includes(search.toLowerCase()))\n    return(\n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <Search placeholder = 'Search Monster' onChangeHandler = {(e) => this.setState({search : e.target.value}) }/>\n      <CardList monsters = {filteredMonster}></CardList> \n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}